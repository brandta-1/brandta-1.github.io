{"version":3,"file":"static/js/616.dac1cfc6.chunk.js","mappings":"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","sources":["components/About.tsx","components/Badge.tsx","components/CardDesc.tsx","components/CardLinks.tsx","components/CardTitle.tsx","components/ItemCard.tsx","components/Work.tsx","utils/stats.ts"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { WorkCard } from './Work';\r\nimport { about } from '../utils/stats';\r\nimport CardTitle from './CardTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport styles from '../utils/styles';\r\n\r\nconst About = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <Stack spacing={'1.75rem'}>\r\n        <WorkCard {...about.meta} />\r\n        <Stack>\r\n          <CardTitle title={'Work References'} />\r\n          <Typography color='text.secondary' component='div'>\r\n            Available upon request.\r\n          </Typography>\r\n        </Stack>\r\n        <Stack>\r\n          <CardTitle title={'Resume'} />\r\n          <Accordion sx={{ mt: '0.5rem' }} onClick={() => setOpen((c) => !c)}>\r\n            <AccordionSummary\r\n              id='panel-header'\r\n              aria-controls='panel-content'\r\n              sx={{ color: 'text.secondary' }}\r\n              expandIcon={<ExpandMoreIcon />}>\r\n              {open ? 'Click to close' : 'Click to view'}\r\n            </AccordionSummary>\r\n            <AccordionDetails sx={styles.pdf}>\r\n              <iframe\r\n                src='https://drive.google.com/file/d/1pvfkICJKQJmRz0Lth3MncRT6nYiaTBvq/preview'\r\n                allow='autoplay'\r\n                width='100%'\r\n                height='100%'\r\n              />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport styles from '../utils/styles';\r\nimport { SxProps, Theme } from '@mui/material/styles';\r\n\r\ninterface BadgeProps {\r\n  skill: string;\r\n}\r\n\r\nconst Badge = (props: BadgeProps) => {\r\n  const { skill } = props;\r\n  const colorKey = skill.replace(/ /g, '_').toLowerCase().replace('#', 'sharp');\r\n  return (\r\n    /* an object of two spread SxProps isnt resolving as type SxProps, choosing to type cast instead of deep merge */\r\n    <Box sx={{ ...styles[colorKey], ...styles.techBadge } as SxProps<Theme>}>\r\n      <Typography sx={styles.p}>{skill}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\n\r\ninterface DescProp {\r\n  desc: string;\r\n}\r\n\r\nconst CardDesc = (props: DescProp) => {\r\n  const { desc } = props;\r\n  return (\r\n    <Typography\r\n      color='text.secondary'\r\n      component='div'\r\n      variant='subtitle1'\r\n      sx={{\r\n        textAlign: 'justify',\r\n        pr: '10px',\r\n        '@media (max-width: 920px)': {\r\n          pr: '0'\r\n        }\r\n      }}>\r\n      {desc}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default CardDesc;\r\n","import Box from '@mui/material/Box';\r\nimport React from 'react';\r\nimport Hoverable from './Hoverable';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\n\r\ninterface CardLinksProps {\r\n  title: string;\r\n  gitHub: string;\r\n  siteLink: string;\r\n}\r\n\r\nconst CardLinks = (props: CardLinksProps) => {\r\n  const { title, gitHub, siteLink } = props;\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: '0.25rem', justifyContent: 'center' }}>\r\n      <Hoverable\r\n        title={`${title} GitHub`}\r\n        childIcon={<GitHubIcon sx={{ fontSize: '1.5rem' }} />}\r\n        siteLink={gitHub}\r\n      />\r\n      <Hoverable\r\n        title={`Visit ${title}`}\r\n        childIcon={<LaunchIcon sx={{ fontSize: '1.5rem' }} />}\r\n        siteLink={siteLink}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardLinks;\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport { SxProps, Theme } from '@mui/material';\r\n\r\ninterface CardTitleProps {\r\n  title: string;\r\n  mediaQuery?: SxProps<Theme>;\r\n}\r\n\r\nconst CardTitle = (props: CardTitleProps) => {\r\n  const { title, mediaQuery } = props;\r\n  return (\r\n    <Typography\r\n      color='text.primary'\r\n      component='div'\r\n      variant='h2'\r\n      sx={{ fontSize: '2rem', fontWeight: 'bold', lineHeight: '1', ...mediaQuery }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default CardTitle;\r\n","import Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport React from 'react';\r\nimport styles from '../utils/styles';\r\n\r\ninterface ItemCardProps {\r\n  children: React.ReactNode;\r\n}\r\n//children just means all its child jsx components\r\n//single source of truth for components that share this\r\n//if something has specific styling, but multiple uses,\r\n//then it should be its own component\r\nconst ItemCard = (props: ItemCardProps) => {\r\n  return (\r\n    <Card\r\n      sx={{\r\n        flex: 1,\r\n        flexWrap: 'wrap',\r\n        margin: 'auto',\r\n        border: 1,\r\n        boxShadow: 3,\r\n        width: '100%'\r\n      }}>\r\n      <CardContent sx={styles.cardContentTest}>{props.children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ItemCard;\r\n","import React from 'react';\r\nimport { WorkItem, work_history } from '../utils/stats';\r\nimport ItemCard from './ItemCard';\r\nimport RowStack from './RowStack';\r\nimport CardTitle from './CardTitle';\r\nimport CardLinks from './CardLinks';\r\nimport CardDesc from './CardDesc';\r\nimport Box from '@mui/material/Box';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Badge from './Badge';\r\nimport Typography from '@mui/material/Typography';\r\nimport styles from '../utils/styles';\r\nimport Stack from '@mui/material/Stack';\r\nexport const WorkCard = (props: WorkItem) => {\r\n  const { title, jobTitle, desc, skills, gitHub, siteLink, timeSpan } = props;\r\n  return (\r\n    <ItemCard>\r\n      <Stack\r\n        sx={{\r\n          justifyContent: 'space-between',\r\n          flexDirection: 'row',\r\n          '@media (max-width: 920px)': {\r\n            flexDirection: 'column'\r\n          }\r\n        }}>\r\n        <Stack\r\n          sx={{\r\n            alignItems: 'end',\r\n            flexDirection: 'row',\r\n            gap: '.75rem',\r\n            '@media (max-width: 920px)': {\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              gap: '.25rem'\r\n            }\r\n          }}>\r\n          <CardTitle\r\n            title={title}\r\n            mediaQuery={{\r\n              '@media (max-width: 920px)': {\r\n                textAlign: 'center'\r\n              }\r\n            }}\r\n          />\r\n          <Typography\r\n            color='text.primary'\r\n            component='div'\r\n            variant='h3'\r\n            sx={{\r\n              fontSize: '1.25rem'\r\n            }}>\r\n            {jobTitle}\r\n          </Typography>\r\n          <Typography color='text.secondary' component='div' variant='h3' sx={{ fontSize: '1rem' }}>\r\n            {timeSpan}\r\n          </Typography>\r\n        </Stack>\r\n        {gitHub && siteLink && <CardLinks title={title} siteLink={siteLink} gitHub={gitHub} />}\r\n      </Stack>\r\n      <CardDesc desc={desc} />\r\n      <Box>\r\n        <CardActions sx={styles.cardActions}>\r\n          {skills.map((i, j) => {\r\n            return <Badge key={j} skill={i} />;\r\n          })}\r\n        </CardActions>\r\n      </Box>\r\n    </ItemCard>\r\n  );\r\n};\r\n\r\nconst Work = () => {\r\n  return (\r\n    <>\r\n      {work_history.map((i) => (\r\n        <WorkCard key={i.title} {...i} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","export interface ContentItem {\r\n  title: string;\r\n  desc: string;\r\n  skills: string[];\r\n}\r\n\r\nexport interface ProjectItem extends ContentItem {\r\n  gitHub?: string;\r\n  siteLink?: string;\r\n}\r\n\r\nexport interface WorkItem extends ContentItem {\r\n  jobTitle?: string;\r\n  gitHub?: string;\r\n  siteLink?: string;\r\n  timeSpan?: string;\r\n}\r\n\r\nexport type Section = 'work_history' | 'projects' | 'about';\r\n\r\nexport const projects: ProjectItem[] = [\r\n  {\r\n    title: 'CS2 Container Tool (WIP)',\r\n    desc: 'Webpage that displays the Return On Investment (ROI) for CS2 containers. The back end runs on Spring Boot, and is used to transform the float distributions for CS2, so they can be partitioned for ROI calculation. The front end displays the data with TypeScript and React, as well as third-party news via RSS.',\r\n    skills: [\r\n      'Hibernate',\r\n      'RSS',\r\n      'Spring Boot',\r\n      'React',\r\n      'Java',\r\n      'MUI',\r\n      'TypeScript',\r\n      'MySQL',\r\n      'Redux'\r\n    ],\r\n    gitHub: 'https://github.com/brandta-1/case-evaluator',\r\n    siteLink: 'https://github.com/brandta-1/case-evaluator-front-end-redux'\r\n  },\r\n  {\r\n    title: 'Camera State Machine',\r\n    desc: 'Custom implementation of camera controls in C# for a Unity game under development',\r\n    skills: ['C#']\r\n  },\r\n  {\r\n    title: \"Trader's Guild\",\r\n    desc: 'Web-based solution for item trading in Dark and Darker. This site uses JSON Web Tokens for authentication, and allows users to search and upload items into a MongoDB database via a GraphQL API. The front end client uses Apollo, and the back end runs on Node.',\r\n    skills: ['MongoDB', 'Express', 'Node', 'React Native', 'JSON Web Tokens', 'GraphQL'],\r\n    gitHub: 'https://github.com/brandta-1/traders-guild-native',\r\n    siteLink: 'https://peaceful-citadel-67422-36a5c387efe8.herokuapp.com/'\r\n  },\r\n  {\r\n    title: 'Brick That',\r\n    desc: 'Image reformatting tool that uses JavaScript to turn images into digital lego mosaics.',\r\n    skills: ['React Native'],\r\n    gitHub: 'https://github.com/brandta-1/brick-that-native',\r\n    siteLink: 'https://brick-that-pwa.vercel.app/'\r\n  },\r\n  {\r\n    title: 'Arcade Assembly',\r\n    desc: 'An online looking-for-group social media app. Final group project for my Full-Stack Web Development course at UNCC. Project leader of a team of 4. Managed team in a scrum style with week-long sprints. Designed and wrote model schema and GQL API.',\r\n    skills: ['MongoDB', 'Express', 'Node', 'React', 'JSON Web Tokens', 'GraphQL'],\r\n    gitHub: 'https://github.com/brandta-1/arcade-assembly',\r\n    siteLink: 'https://arcade-assembly-c977bb949035.herokuapp.com/'\r\n  }\r\n];\r\n\r\nexport const work_history: WorkItem[] = [\r\n  {\r\n    title: 'Colorado State University',\r\n    jobTitle: 'Full Stack Research Developer',\r\n    desc: 'I oversee the end-to-end application lifecycle of 4 different applications utilized by thousands of employees at the Colorado Department of Public Health and Environment (CDPHE). My responsibilities include database architecture, creating server and client-side APIs, writing efficient client-facing views, database queries, deployment pipelines and more.',\r\n    skills: [\r\n      'Linux',\r\n      'Redis',\r\n      'React',\r\n      'Docker',\r\n      'Kubernetes',\r\n      'PostgreSQL',\r\n      'Python',\r\n      'Redux',\r\n      'Django'\r\n    ],\r\n    siteLink: 'https://erams.com/catena/tools/cdphe/',\r\n    timeSpan: 'June 2024 - Present'\r\n  },\r\n  {\r\n    title: 'One Community Global',\r\n    jobTitle: 'Full Stack Developer',\r\n    desc: 'I wrote full-stack features and assisted other developers via code reviews. My contributions included full-stack API debugging, an API that allows users to log their weekly work, repository documentation, and unit testing for React-Redux components and back-end functions.',\r\n    skills: ['MongoDB', 'Node', 'Express', 'React', 'Jest', 'Axios', 'Bootstrap', 'Redux'],\r\n    gitHub: 'https://github.com/OneCommunityGlobal/HighestGoodNetworkApp/',\r\n    siteLink: 'https://www.onecommunityglobal.org/executive-summary/',\r\n    timeSpan: 'Feb 2024 - Oct 2024'\r\n  },\r\n  {\r\n    title: 'We Vote',\r\n    jobTitle: 'Full Stack Developer',\r\n    desc: 'I solve full-stack bug tickets and issues via Jira, GitHub, and Slack. My work involves the front end, the database, the back end, and the database admin site. My contributions currently include updating database records, writing back-end APIs, creating and updating user interfaces for both the web application and the admin site, and providing collaborative assistance to fellow engineers.',\r\n    skills: ['Linux', 'React', 'Flux', 'jQuery', 'PostgreSQL', 'Python', 'Django'],\r\n    gitHub: 'https://github.com/wevote/WeVoteServer',\r\n    siteLink: 'https://wevote.us/',\r\n    timeSpan: 'Oct 2023 - Oct 2024'\r\n  },\r\n  {\r\n    title: 'LPL Financial',\r\n    jobTitle: 'Associate Research Analyst',\r\n    desc: 'I help advisors manage their practice by providing research on various financial instruments. I achieve this by using Salesforce CRM, VBA automation, Bloomberg Terminal and its Query Language, RSS feeds, and SQL. My work also includes high-net-worth account consulting, product sales, and more.',\r\n    skills: ['RSS', 'Salesforce', 'VBA', 'SQL', 'Bloomberg Terminal'],\r\n    timeSpan: 'May 2022 - June 2024'\r\n  },\r\n  {\r\n    title: 'TIAA',\r\n    jobTitle: 'Financial Solutions Associate',\r\n    desc: 'Created client data visualizations using Tableau, presented fiscal year 2021 analysis to management. Utilized Excel and VBA scripting to develop dashboards that organized performance statistics of 25+ advisors.',\r\n    skills: ['VBA', 'Tableau'],\r\n    timeSpan: 'May 2021 - May 2022'\r\n  },\r\n  {\r\n    title: 'University of South Carolina',\r\n    jobTitle: 'Lab Assistant',\r\n    desc: 'Taught labratory assignments to about 20 students per semester. Topics included basic Java syntax, object-oriented programming, data structures, and recursion. Developed custom learning plans and assignments for individual students. Fostered an environment where students could become efficient problem solvers.',\r\n    skills: ['Java'],\r\n    timeSpan: 'May 2019 - April 2021'\r\n  }\r\n];\r\n\r\nexport const about = {\r\n  meta: {\r\n    title: 'About This Site',\r\n    desc: 'This site is written in TypeScript, and it uses the Material UI library for React.',\r\n    skills: ['React', 'MUI', 'TypeScript']\r\n  } as ProjectItem\r\n};\r\n"],"names":["About","open","setOpen","useState","_jsx","_Fragment","children","_jsxs","Stack","spacing","WorkCard","about","meta","CardTitle","title","Typography","color","component","Accordion","sx","mt","onClick","c","AccordionSummary","id","expandIcon","ExpandMoreIcon","AccordionDetails","styles","pdf","src","allow","width","height","props","skill","colorKey","replace","toLowerCase","Box","techBadge","p","desc","variant","textAlign","pr","gitHub","siteLink","display","gap","justifyContent","Hoverable","concat","childIcon","GitHubIcon","fontSize","LaunchIcon","mediaQuery","fontWeight","lineHeight","Card","flex","flexWrap","margin","border","boxShadow","CardContent","cardContentTest","jobTitle","skills","timeSpan","ItemCard","flexDirection","alignItems","CardLinks","CardDesc","CardActions","cardActions","map","i","j","Badge","Work","work_history","projects"],"sourceRoot":""}